# docker-compose.yaml
version: '3'

services:
  ssr-app:
    env_file: .env.docker
    build:
      context: .
    # Проброс порта так же, как в командной строке — на какой порт хоста какой порт контейнера
    depends_on:
      - postgres
    ports:
      - '5000:5000'
    networks:
      # Назвать сеть можно как угодно
      - mynetwork

  game-server-app:
    # Этим ключом мы скажем docker-compose, чтобы он собирал Dockerfile, который
    build:
      context: ./server-game
      # Проброс порта так же, как в командной строке — на какой порт хоста какой порт контейнера
    ports:
      - '8081:8081'
    networks:
      # Назвать сеть можно как угодно
      - mynetwork

  postgres:
    container_name: croco_postgres_db # Можно и не указывать, тогда будет взято за основу название сервиса: `postgres`
    image: postgres:12
    ports:
      - '5432:5432'
    volumes:
      - ./postgresdata:/var/lib/postgresql/data
      # Если у вас есть схема БД, которую можно подгрузить на старте, — передайте её
      #- ./src/migrations/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    restart: always
    env_file: .env
    networks:
      - mynetwork

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.18
    restart: always
    env_file: .env
    ports:
      - '8080:80'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - mynetwork

volumes:
  pgadmin-data:

# Настройки созданной сети между сервисами
networks:
  mynetwork:
    driver: bridge
